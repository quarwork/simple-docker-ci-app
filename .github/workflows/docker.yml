name: Build and Push Docker image to Docker Hub and Deploy to Fly.io

# üöÄ When this workflow runs:
# It will be triggered automatically on every push to the main branch
on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    # üñ•Ô∏è Run this job inside a virtual machine with Ubuntu
    runs-on: ubuntu-latest

    steps:
    # 1Ô∏è‚É£ Checkout repository
    # This pulls the repository code into the CI environment
    # so we can use files like Dockerfile, app.py, etc.
    - name: Checkout repository
      uses: actions/checkout@v3

    # 2Ô∏è‚É£ Log in to Docker Hub
    # Authenticates with Docker Hub using secrets stored in GitHub
    # DOCKERHUB_USERNAME ‚Üí Docker Hub username
    # DOCKERHUB_TOKEN ‚Üí personal access token (like a password for CI)
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    # 3Ô∏è‚É£ Build and push Docker image
    # - context: .   ‚Üí use the current directory with Dockerfile
    # - push: true   ‚Üí publish the image to Docker Hub after build
    # - tags         ‚Üí specify image name and tag (quarwork/simple-docker-ci-app:latest)
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: quarwork/simple-docker-ci-app:latest

    # 4Ô∏è‚É£ Install Fly.io CLI (flyctl)
    # Downloads and installs the official flyctl client to manage Fly.io apps
    # Adds it to PATH so commands can be executed
    - name: Install flyctl
      run: |
        curl -L https://fly.io/install.sh | sh
        echo "$HOME/.fly/bin" >> $GITHUB_PATH
        export PATH="$HOME/.fly/bin:$PATH"
        flyctl version   # Check installation

    # 5Ô∏è‚É£ Check if Fly app already exists
    # - Runs "flyctl apps list" to see all apps
    # - If an app named "simple-docker-ci-app" is found ‚Üí app_exists=true
    # - Otherwise ‚Üí app_exists=false
    # The result is stored as GitHub Actions output for later steps
    - name: Check if Fly app exists
      id: check_app
      run: |
        if flyctl apps list | grep -q simple-docker-ci-app; then
          echo "app_exists=true" >> $GITHUB_OUTPUT
        else
          echo "app_exists=false" >> $GITHUB_OUTPUT
        fi
      env:
        FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}  # API token for Fly.io

    # 6Ô∏è‚É£ Create Fly app if it doesn‚Äôt exist
    # If the previous step showed that the app is missing (app_exists=false)
    # then we create a new app with the given name
    - name: Create Fly app if missing
      if: steps.check_app.outputs.app_exists == 'false'
      run: flyctl apps create --name simple-docker-ci-app --yes
      env:
        FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

    # 7Ô∏è‚É£ Deploy app to Fly.io
    # Use the already published Docker image from Docker Hub
    # --image quarwork/simple-docker-ci-app:latest ‚Üí specify the image to deploy
    # --app simple-docker-ci-app ‚Üí the Fly.io app name where deployment happens
    - name: Deploy to Fly.io using Docker Hub image
      run: flyctl deploy --image quarwork/simple-docker-ci-app:latest --app simple-docker-ci-app
      env:
        FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
